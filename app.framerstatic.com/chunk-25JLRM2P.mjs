import{a as C,b as E,d as A}from"https://app.framerstatic.com/chunk-YRBVFSEE.mjs";import{c as k,d as U,e as D,g as L,h as w,o as M,r as b,u as P}from"https://app.framerstatic.com/chunk-ZZH45KH5.mjs";import{b as v}from"https://app.framerstatic.com/chunk-OTIFPWYF.mjs";import{o as h}from"https://app.framerstatic.com/chunk-FEMUQY7R.mjs";import{f as I}from"https://app.framerstatic.com/chunk-XBM64GTP.mjs";import{a as R}from"https://app.framerstatic.com/chunk-IEAVFMRN.mjs";import{i as y}from"https://app.framerstatic.com/chunk-Y3X6G54E.mjs";import{l,u as g}from"https://app.framerstatic.com/chunk-IZV4HDYJ.mjs";import{a}from"https://app.framerstatic.com/chunk-WNSBRACC.mjs";import{a as T}from"https://app.framerstatic.com/chunk-LQILWJHN.mjs";import{j as r}from"https://app.framerstatic.com/chunk-AHQIRSXG.mjs";var u=g("RemoteConnection"),j=1e3,f=class extends v{constructor(e){super();r(this,"isReconnect",!1);r(this,"messageQueue",[]);r(this,"baseURL");r(this,"socket");r(this,"stats");this.baseURL=A(e)}createPingInterval(e,t){return setInterval(()=>{if(a(this.socket===e,"Invalid socket"),a(this.stats===t,"Invalid stats"),performance.now()-t.lastSend()<j||t.pendingCount("ping")>0)return;let n="ping {}";e.send(n),t.sent("ping",n)},j)}connect(e){if(this.socket)return;let t=new URL(this.baseURL);t.searchParams.set("v",String(U)),t.searchParams.set("tunnel",R()??""),t.searchParams.set("treeSchema",String(h)),t.searchParams.set("treeVersion",String(e));let n=new WebSocket(t),s=new k;this.socket=n,this.stats=s,u.debug("Connecting:",n.url);let i;n.addEventListener("open",()=>{a(this.socket===n,"Invalid socket"),a(this.stats===s,"Invalid stats"),u.debug("Connected:",n.url),i=this.createPingInterval(n,s),this.emit("connect",this.isReconnect),this.isReconnect=!0,this.flushMessageQueue(n,s)}),n.addEventListener("message",c=>{a(this.socket===n,"Invalid socket"),a(this.stats===s,"Invalid stats");let d=c.data,m=w(d);if(s.received(d),m.type==="ack")return s.acked();m.type==="redirect"&&(this.baseURL=m.value.url),u.trace("Received:",m),this.emit("message",m)}),n.addEventListener("close",c=>{a(this.socket===n,"Invalid socket"),a(this.stats===s,"Invalid stats"),clearInterval(i);let d=L(c);u.debug("Disconnected:",d),this.socket=void 0,this.stats=void 0,this.emit("disconnect",d)})}disconnect(){this.socket?.close()}flushMessageQueue(e,t){if(e.readyState===WebSocket.OPEN){for(let{type:n,value:s}of this.messageQueue)try{let i=JSON.stringify(s),c=`${n} ${i}`;e.send(c),t.sent(n,c)}catch(i){u.warn("Error sending:",n,i)}this.messageQueue.length=0}}send(e){this.messageQueue.push(e),this.socket&&this.stats&&this.flushMessageQueue(this.socket,this.stats)}onMessage(e){return this.on("message",e),()=>{this.off("message",e)}}};var S=class extends v{constructor(e,t){super();this.timeline=e;this.projectId=t;r(this,"treeSync");r(this,"remoteTreeUpdates",[]);r(this,"documentLoader");this.treeSync=new P(this.timeline.tree,0,this.timeline),this.treeSync.waitingForTree=!0}handleTreeMessage(e){if(e.type!=="init")return;let t=T();this.treeSync.handleInit(e.data.treeVersion,e.data.initialUpdates)&&this.downloadDocument(new URL(e.data.file,t.app).href,e.data.treeVersion)}handleTreeUpdate(e){this.treeSync.waitingForTree?this.remoteTreeUpdates.push(e):(this.treeSync.handleRemoteUpdate(e),this.emit("update",this.treeSync.tree))}downloadDocument(e,t){a(this.treeSync.waitingForTree,"Must be waiting for tree"),this.documentLoader&&(this.documentLoader.scheduler.cancel(),this.documentLoader.removeAllListeners());let n={partialParsing:!0,loadInBackground:!0,async refreshAccessToken(i){return{...i,credentials:"include"}}},s=new M(t,e,n);this.documentLoader=s,s.on("loadedFirstData",i=>{i.setService("metadata",{projectId:this.projectId}),s.pauseLoadingScopes();let c={isLoading:!0};this.treeSync.setTree(i,t,c);for(let d of this.remoteTreeUpdates)this.treeSync.handleRemoteUpdate(d);this.remoteTreeUpdates.length=0,this.emit("update",this.treeSync.tree),s.canvasTreeVersion<h&&this.emit("disconnect","ClientTooNew"),s.canvasTreeVersion>h&&this.emit("disconnect","ClientNeedsUpdate")}),s.on("loadedAllData",()=>{this.treeSync.loadedAllScopes(),this.emit("update",this.treeSync.tree)}),s.on("loadedScope",i=>{this.treeSync.loadOneScope(i,!1),this.emit("update",this.treeSync.tree)}),s.start().catch(l)}};var O=g("remote:project"),V=class{constructor(o,e,t){this.timeline=o;this.userId=e;this.projectId=t;r(this,"connection");r(this,"document");r(this,"api");r(this,"modulesAPI");r(this,"assetService");r(this,"reconnectTimeout");this.connection=new f(this.projectId),this.document=new S(this.timeline,this.projectId),this.api=new E(this.connection,this.projectId),this.assetService=new y(this.api),this.modulesAPI=new C(this.api,this.connection),this.connection.on("disconnect",this.onDisconnect,this),this.connection.on("message",this.onMessage,this),this.assetService.refresh().catch(l)}connect(){let o=this.document.treeSync.treeVersion;this.connection.connect(o)}disconnect(){this.cancelReconnect(),this.connection.disconnect()}maybeSend(){let o=this.document.treeSync,e=o.createUpdateToSend(),t=o.localUpdatesInFlight.length;e&&(O.debug("sending update:",t,e.changes.length,e.reasons),this.connection.send({type:"treeUpdate",value:b({...e,appEnvironment:"on_page"})}),I("editor_bar_interaction",{page:"editor-bar-project-page",id:"editor-bar-tree-update"}))}cancelReconnect(){clearTimeout(this.reconnectTimeout),this.reconnectTimeout=void 0}scheduleReconnect(o){this.cancelReconnect(),this.reconnectTimeout=setTimeout(()=>{this.reconnectTimeout=void 0,this.connect()},o)}onDisconnect(o){if(D(o)){let e=Q(o);this.scheduleReconnect(e)}}onMessage(o){switch(o.type){case"treeMessage":return this.document.handleTreeMessage(o.value);case"treeUpdate":return this.document.handleTreeUpdate(o.value);case"notifyProjectChange":switch(o.value.scope){case"assets":return this.assetService.refresh();case"assetsInvalidated":return this.assetService.refreshFully();default:return}}}};function Q(p){return p==="ReconnectToNewServer"?25:1e3}export{V as a};
//# sourceMappingURL=https://app.framerstatic.com/chunk-25JLRM2P.mjs.map
